res_com = str_replace(res_com, "TRAIN L", "Ligne L"),
res_com = str_replace(res_com, "TRAIN N", "Ligne N"),
res_com = str_replace(res_com, "TRAIN P", "Ligne P"),
res_com = str_replace(res_com, "TRAIN R", "Ligne R"),
res_com = str_replace(res_com, "TRAIN U", "Ligne U")
)
nb_val <- read.csv("D:/BUT SD 2/S4/SAE Composant Décisionnel RShiny/Validations/data-rf-2015/2015S1_NB_FER.csv", sep = ";", header = T)
nb_val_2 <- read.csv("D:/BUT SD 2/S4/SAE Composant Décisionnel RShiny/Validations/data-rf-2015/2015S2_NB_FER.csv", sep = ";", header = T)
nb_val_2015 <- rbind(nb_val, nb_val_2)
traaaaaa <- merge(transports, nb_val_2015, by.x = "id_gares", by.y = "CODE_STIF_ARRET")
# Supposons que 'traaaa' est le nom de votre dataframe
# Créons d'abord un graphique à barres pour visualiser le nombre de gares par res_com
ggplot(traaaaaa, aes(x = res_com)) +
geom_bar() +
labs(x = "Ligne de transport", y = "Nombre de gares", title = "Nombre de gares par ligne de transport")
# Ensuite, créons un graphique à barres empilées pour visualiser le nombre de gares par res_com et nom_gare
ggplot(traaaaaa, aes(x = res_com, fill = nom_gares)) +
geom_bar(position = "stack") +
labs(x = "Ligne de transport", y = "Nombre de gares", title = "Nombre de gares par ligne de transport et par nom de gare")
tra <- merge(transports, nb_val_2015, by.x = "id_gares", by.y = "CODE_STIF_ARRET")
# Supposons que 'traaaa' est le nom de votre dataframe
# Créons d'abord un graphique à barres pour visualiser le nombre de gares par res_com
ggplot(tra, aes(x = res_com)) +
geom_bar() +
labs(x = "Ligne de transport", y = "Nombre de gares", title = "Nombre de gares par ligne de transport")
View(tra)
tra_14 <- tra %>%
filter(tra$res_com == "Métro 14")
tra_14 <- tra %>%
filter(tra$res_com == "Métro 14")
View(tra_14)
tra_03bis <- tra %>%
filter(tra$res_com == "Métro 03bis")
View(tra_03bis)
runApp('shiny.R')
runApp('shiny.R')
tra_03bis$nom_gares
unique(tra_03bis$nom_gares)
setwd("/Volumes/BAPT T/BUT SD 2/S4/SAE Composant Décisionnel RShiny/VRAI TRAVAIL")
# CHARGEMENT DES LIBRARIES
library(geojsonio)
library(ggplot2)
library(dplyr)
library(tidyr)
library(geojson)
library(leaflet)
library(tibble)
library(shiny)
library(shinydashboard)
library(scales)
library(DT)
library(stringr)
library(gpx)
library(sf)
library(geojsonsf)
library(readxl)
library(forcats)
# POUR 2021 :
trafic <- read.csv("trafic-annuel-entrant-par-station-du-reseau-ferre-2021.csv", sep = ";", header = T)
# METRO
trafic_metro <- trafic %>%
filter(Réseau == "Métro") %>%
filter(Station != "FUNICULAIRE") %>%
arrange(desc(Trafic))
resultats_top10 <- trafic_metro %>%
top_n(10, Trafic) %>%
arrange(desc(Trafic))
ggplot(resultats_top10, aes(x = reorder(Station, -Trafic), y = Trafic, label = Trafic)) +
theme_classic() +
geom_bar(stat = "identity", fill = "lightblue", color = "black") +
geom_text(aes(label = scales::number(Trafic, big.mark = " ")), position = position_stack(vjust = 0.5), color = "black", size = 3) +
labs(x = "", y = "Nombre de validations annuel", title = "Les stations de métro les plus fréquentées (2021)") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
resultats_bottom10 <- trafic_metro %>%
tail(10) %>%
arrange(Trafic)
ggplot(resultats_bottom10, aes(x = reorder(Station, Trafic), y = Trafic, label = Trafic)) +
theme_classic() +
geom_bar(stat = "identity", fill = "lightsalmon", color = "black") +
geom_text(aes(label = scales::number(Trafic, big.mark = " ")), position = position_stack(vjust = 0.5), color = "black", size = 3) +
labs(x = "", y = "Nombre de validations annuel", title = "Les stations de métro les moins fréquentées (2021)") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
trafic_ligne <- read.csv("trafic_metro.csv", sep = ";", header = T)
trafic_ligne <- trafic_ligne %>%
mutate(across(2:ncol(trafic_ligne), as.numeric))
trafic_ligne[14,1] <- "Ligne 14"
trafic_ligne <- trafic_ligne %>%
select(-2:-16) %>%
slice(-n())
trafic_ligne <- trafic_ligne %>%
mutate(
X = case_when(
X == "Ligne 1" ~ "Ligne 01",
X == "Ligne 2" ~ "Ligne 02",
X == "Ligne 3 (+3bis)" ~ "Ligne 03 & 03bis",
X == "Ligne 4" ~ "Ligne 04",
X == "Ligne 5" ~ "Ligne 05",
X == "Ligne 6" ~ "Ligne 06",
X == "Ligne 7 (+7bis)" ~ "Ligne 07 & 07bis",
X == "Ligne 8" ~ "Ligne 08",
X == "Ligne 9" ~ "Ligne 09",
X == "Ligne 10" ~ "Ligne 10",
X == "Ligne 11" ~ "Ligne 11",
X == "Ligne 12" ~ "Ligne 12",
X == "Ligne 13" ~ "Ligne 13",
X == "Ligne 14" ~ "Ligne 14",
TRUE ~ X  # Garder les autres valeurs inchangées
)
)
trafic_ligne <- trafic_ligne %>%
mutate(Couleur = case_when(
trafic_ligne == "Ligne 01" ~ "#FFCE00",
trafic_ligne == "Ligne 02" ~ "#0064B0",
trafic_ligne == "Ligne 03 & 03bis" ~ "#9F9825",
trafic_ligne == "Ligne 04" ~ "#C04191",
trafic_ligne == "Ligne 05" ~ "#F28E42",
trafic_ligne == "Ligne 06" ~ "#83C491",
trafic_ligne == "Ligne 07 & 07bis" ~ "#F3A4BA",
trafic_ligne == "Ligne 08" ~ "#CEADD2",
trafic_ligne == "Ligne 09" ~ "#D5C900",
trafic_ligne == "Ligne 10" ~ "#E3B32A",
trafic_ligne == "Ligne 11" ~ "#8D5E2A",
trafic_ligne == "Ligne 12" ~ "#00814F",
trafic_ligne == "Ligne 13" ~ "#98D4E2",
trafic_ligne == "Ligne 14" ~ "#662483",
TRUE ~ NA_character_
))
correspondance_couleur <- trafic_ligne %>%
select(X, Couleur)
trafic_ligne_2021 <- trafic_ligne %>%
arrange(desc(X2021))
ggplot(trafic_ligne_2021, aes(x = reorder(X, -X2021), y = X2021, label = X2021, fill = X)) +
theme_classic() +
geom_bar(stat = "identity", color = "black") +
scale_fill_manual(values = correspondance_couleur$Couleur, guide = "none") +  # Ne pas afficher la légende de la couleur
geom_text(aes(label = scales::number(X2021, big.mark = " ")), position = position_stack(vjust = 0.5), color = "black", size = 3) +
labs(x = "", y = "Nombre de voyageurs annuel (en millions)", title = "La fréquentation des lignes de métro (2021)") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
trafic_ligne_2020 <- trafic_ligne %>%
arrange(desc(X2020))
ggplot(trafic_ligne_2020, aes(x = reorder(X, -X2020), y = X2020, label = X2020, fill = X)) +
theme_classic() +
geom_bar(stat = "identity", color = "black") +
scale_fill_manual(values = correspondance_couleur$Couleur, guide = "none") +  # Ne pas afficher la légende de la couleur
geom_text(aes(label = scales::number(X2020, big.mark = " ")), position = position_stack(vjust = 0.5), color = "black", size = 3) +
labs(x = "", y = "Nombre de voyageurs annuel (en millions)", title = "La fréquentation des lignes de métro (2020)") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
trafic_ligne_2019 <- trafic_ligne %>%
arrange(desc(X2019))
ggplot(trafic_ligne_2019, aes(x = reorder(X, -X2019), y = X2019, label = X2019, fill = X)) +
theme_classic() +
geom_bar(stat = "identity", color = "black") +
scale_fill_manual(values = correspondance_couleur$Couleur, guide = "none") +  # Ne pas afficher la légende de la couleur
geom_text(aes(label = scales::number(X2019, big.mark = " ")), position = position_stack(vjust = 0.5), color = "black", size = 3) +
labs(x = "", y = "Nombre de voyageurs annuel (en millions)", title = "La fréquentation des lignes de métro (2019)") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
trafic_ligne_2018 <- trafic_ligne %>%
arrange(desc(X2018))
ggplot(trafic_ligne_2018, aes(x = reorder(X, -X2018), y = X2018, label = X2018, fill = X)) +
theme_classic() +
geom_bar(stat = "identity", color = "black") +
scale_fill_manual(values = correspondance_couleur$Couleur, guide = "none") +  # Ne pas afficher la légende de la couleur
geom_text(aes(label = scales::number(X2018, big.mark = " ")), position = position_stack(vjust = 0.5), color = "black", size = 3) +
labs(x = "", y = "Nombre de voyageurs annuel (en millions)", title = "La fréquentation des lignes de métro (2018)") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
trafic_ligne_2017 <- trafic_ligne %>%
arrange(desc(X2017))
ggplot(trafic_ligne_2017, aes(x = reorder(X, -X2017), y = X2017, label = X2017, fill = X)) +
theme_classic() +
geom_bar(stat = "identity", color = "black") +
scale_fill_manual(values = correspondance_couleur$Couleur, guide = "none") +  # Ne pas afficher la légende de la couleur
geom_text(aes(label = scales::number(X2017, big.mark = " ")), position = position_stack(vjust = 0.5), color = "black", size = 3) +
labs(x = "", y = "Nombre de voyageurs annuel (en millions)", title = "La fréquentation des lignes de métro (2017)") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
trafic_ligne_2016 <- trafic_ligne %>%
arrange(desc(X2016))
ggplot(trafic_ligne_2016, aes(x = reorder(X, -X2016), y = X2016, label = X2016, fill = X)) +
theme_classic() +
geom_bar(stat = "identity", color = "black") +
scale_fill_manual(values = correspondance_couleur$Couleur, guide = "none") +  # Ne pas afficher la légende de la couleur
geom_text(aes(label = scales::number(X2016, big.mark = " ")), position = position_stack(vjust = 0.5), color = "black", size = 3) +
labs(x = "", y = "Nombre de voyageurs annuel (en millions)", title = "La fréquentation des lignes de métro (2016)") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
trafic_ligne_2015 <- trafic_ligne %>%
arrange(desc(X2015))
ggplot(trafic_ligne_2015, aes(x = reorder(X, -X2015), y = X2015, label = X2015, fill = X)) +
theme_classic() +
geom_bar(stat = "identity", color = "black") +
scale_fill_manual(values = correspondance_couleur$Couleur, guide = "none") +  # Ne pas afficher la légende de la couleur
geom_text(aes(label = scales::number(X2015, big.mark = " ")), position = position_stack(vjust = 0.5), color = "black", size = 3) +
labs(x = "", y = "Nombre de voyageurs annuel (en millions)", title = "La fréquentation des lignes de métro (2015)") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
trafic_an_ligne <- gather(trafic_ligne, key = "key", value = "value", -X)
trafic_an_ligne$value <- as.numeric(trafic_an_ligne$value)
trafic_an_ligne <- trafic_an_ligne %>%
filter(!(key %in% c("Couleur", "X2022", "X2023")))
trafic_an_ligne <- left_join(trafic_an_ligne, correspondance_couleur, by = "X")
trafic_an_ligne$key <- substr(trafic_an_ligne$key, 2, nchar(trafic_an_ligne$key))
# Créer le graphique
ggplot(trafic_an_ligne, aes(x = key, y = value, color = X, group = X)) +
geom_line() +
scale_color_manual(values = unique(trafic_an_ligne$Couleur)) +
labs(x = "", y = "Nombre de voyageurs annuel (en millions)", title = "La fréquentation des lignes de métro (2015-2021)", color = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(0, 200)
ligne_2 <- trafic_metro %>%
filter(Correspondance_1 == "2" |
Correspondance_2 == "2" |
Correspondance_3 == "2" |
Correspondance_4 == "2" |
Correspondance_5 == "2")
resultats_top5 <- ligne_2 %>%
top_n(5, Trafic) %>%
arrange(desc(Trafic))
ggplot(resultats_top5, aes(x = reorder(Station, -Trafic), y = Trafic, label = Trafic)) +
theme_classic() +
geom_bar(stat = "identity", fill = "#0064B0", color = "black") +
geom_text(aes(label = scales::number(Trafic, big.mark = " ")), position = position_stack(vjust = 0.5), color = "black", size = 3) +
labs(x = "", y = "Nombre de validations annuel", title = "Les stations de la ligne 2 les plus fréquentées (2021)") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
resultats_bottom5 <- ligne_2 %>%
tail(5) %>%
arrange(Trafic)
ggplot(resultats_bottom5, aes(x = reorder(Station, Trafic), y = Trafic, label = Trafic)) +
theme_classic() +
geom_bar(stat = "identity", fill = "#0064B0", color = "black") +
geom_text(aes(label = scales::number(Trafic, big.mark = " ")), position = position_stack(vjust = 0.5), color = "black", size = 3) +
labs(x = "", y = "Nombre de validations annuel", title = "Les stations de la ligne 2 les moins fréquentées (2021)") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
ligne_11 <- trafic_metro %>%
filter(Correspondance_1 == "11" |
Correspondance_2 == "11" |
Correspondance_3 == "11" |
Correspondance_4 == "11" |
Correspondance_5 == "11")
resultats_top5 <- ligne_11 %>%
top_n(5, Trafic) %>%
arrange(desc(Trafic))
ggplot(resultats_top5, aes(x = reorder(Station, -Trafic), y = Trafic, label = Trafic)) +
theme_classic() +
geom_bar(stat = "identity", fill = "#8D5E2A", color = "black") +
geom_text(aes(label = scales::number(Trafic, big.mark = " ")), position = position_stack(vjust = 0.5), color = "black", size = 3) +
labs(x = "", y = "Nombre de validations annuel", title = "Les stations de la ligne 11 les plus fréquentées (2021)") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
resultats_bottom5 <- ligne_11 %>%
tail(5) %>%
arrange(Trafic)
ggplot(resultats_bottom5, aes(x = reorder(Station, Trafic), y = Trafic, label = Trafic)) +
theme_classic() +
geom_bar(stat = "identity", fill = "#8D5E2A", color = "black") +
geom_text(aes(label = scales::number(Trafic, big.mark = " ")), position = position_stack(vjust = 0.5), color = "black", size = 3) +
labs(x = "", y = "Nombre de validations annuel", title = "Les stations de la ligne 11 les moins fréquentées (2021)") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
ligne_8 <- trafic_metro %>%
filter(Correspondance_1 == "8" |
Correspondance_2 == "8" |
Correspondance_3 == "8" |
Correspondance_4 == "8" |
Correspondance_5 == "8")
resultats_top5 <- ligne_8 %>%
top_n(5, Trafic) %>%
arrange(desc(Trafic))
ggplot(resultats_top5, aes(x = reorder(Station, -Trafic), y = Trafic, label = Trafic)) +
theme_classic() +
geom_bar(stat = "identity", fill = "#CEADD2", color = "black") +
geom_text(aes(label = scales::number(Trafic, big.mark = " ")), position = position_stack(vjust = 0.5), color = "black", size = 3) +
labs(x = "", y = "Nombre de validations annuel", title = "Les stations de la ligne 8 les plus fréquentées (2021)") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
resultats_bottom5 <- ligne_8 %>%
tail(5) %>%
arrange(Trafic)
ggplot(resultats_bottom5, aes(x = reorder(Station, Trafic), y = Trafic, label = Trafic)) +
theme_classic() +
geom_bar(stat = "identity", fill = "#CEADD2", color = "black") +
geom_text(aes(label = scales::number(Trafic, big.mark = " ")), position = position_stack(vjust = 0.5), color = "black", size = 3) +
labs(x = "", y = "Nombre de validations annuel", title = "Les stations de la ligne 8 les moins fréquentées (2021)") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
ligne_6 <- trafic_metro %>%
filter(Correspondance_1 == "6" |
Correspondance_2 == "6" |
Correspondance_3 == "6" |
Correspondance_4 == "6" |
Correspondance_5 == "6")
resultats_top5 <- ligne_6 %>%
top_n(5, Trafic) %>%
arrange(desc(Trafic))
ggplot(resultats_top5, aes(x = reorder(Station, -Trafic), y = Trafic, label = Trafic)) +
theme_classic() +
geom_bar(stat = "identity", fill = "#83C491", color = "black") +
geom_text(aes(label = scales::number(Trafic, big.mark = " ")), position = position_stack(vjust = 0.5), color = "black", size = 3) +
labs(x = "", y = "Nombre de validations annuel", title = "Les stations de la ligne 6 les plus fréquentées (2021)") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
resultats_bottom5 <- ligne_6 %>%
tail(5) %>%
arrange(Trafic)
ggplot(resultats_bottom5, aes(x = reorder(Station, Trafic), y = Trafic, label = Trafic)) +
theme_classic() +
geom_bar(stat = "identity", fill = "#83C491", color = "black") +
geom_text(aes(label = scales::number(Trafic, big.mark = " ")), position = position_stack(vjust = 0.5), color = "black", size = 3) +
labs(x = "", y = "Nombre de validations annuel", title = "Les stations de la ligne 6 les moins fréquentées (2021)") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
ligne_10 <- trafic_metro %>%
filter(Correspondance_1 == "10" |
Correspondance_2 == "10" |
Correspondance_3 == "10" |
Correspondance_4 == "10" |
Correspondance_5 == "10")
ligne_10 <- trafic_metro %>%
filter(Correspondance_1 == "10" |
Correspondance_2 == "10" |
Correspondance_3 == "10" |
Correspondance_4 == "10" |
Correspondance_5 == "10")
resultats_top5 <- ligne_10 %>%
top_n(5, Trafic) %>%
arrange(desc(Trafic))
ggplot(resultats_top5, aes(x = reorder(Station, -Trafic), y = Trafic, label = Trafic)) +
theme_classic() +
geom_bar(stat = "identity", fill = "#E3B32A", color = "black") +
geom_text(aes(label = scales::number(Trafic, big.mark = " ")), position = position_stack(vjust = 0.5), color = "black", size = 3) +
labs(x = "", y = "Nombre de validations annuel", title = "Les stations de la ligne 10 les plus fréquentées (2021)") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
resultats_bottom5 <- ligne_10 %>%
tail(5) %>%
arrange(Trafic)
ggplot(resultats_bottom5, aes(x = reorder(Station, Trafic), y = Trafic, label = Trafic)) +
theme_classic() +
geom_bar(stat = "identity", fill = "#E3B32A", color = "black") +
geom_text(aes(label = scales::number(Trafic, big.mark = " ")), position = position_stack(vjust = 0.5), color = "black", size = 3) +
labs(x = "", y = "Nombre de validations annuel", title = "Les stations de la ligne 10 les moins fréquentées (2021)") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
# UI
ui <- dashboardPage(
dashboardHeader(title = "Transports", titleWidth = 300),
dashboardSidebar(
sidebarMenu(
menuItem("Fréquentation des lignes au fil des années", tabName = "vue", icon = icon("dashboard"))
)
),
dashboardBody(
tabItems(
tabItem(
"vue",
fluidRow(
column(
width = 30,
box(
title = "Graphique de la fréquentation",
plotOutput("frequentationPlot")
)
),
column(
width = 4,
box(
title = "Filtrer par ligne",
selectInput(
"ligne",
"Ligne choisie",
choices = c(
"Toutes les lignes",
sort(unique(trafic_an_ligne$X))
)
)
)
)
)
)
)
),
skin = "yellow"
)
# UI
ui <- dashboardPage(
dashboardHeader(title = "Transports", titleWidth = 300),
dashboardSidebar(
sidebarMenu(
menuItem("Fréquentation des lignes au fil des années", tabName = "vue", icon = icon("dashboard"))
)
),
dashboardBody(
tabItems(
tabItem(
"vue",
fluidRow(
column(
width = 8,
box(
title = "Graphique de la fréquentation",
plotOutput("frequentationPlot")
)
),
column(
width = 4,
box(
title = "Filtrer par ligne",
selectInput(
"ligne",
"Ligne choisie",
choices = c(
"Toutes les lignes",
sort(unique(trafic_an_ligne$X))
)
)
)
)
)
)
)
),
skin = "yellow"
)
# Serveur
server <- function(input, output) {
output$frequentationPlot <- renderPlot({
filtered_data <- trafic_an_ligne %>%
filter(input$ligne == "Toutes les lignes" | X == input$ligne)  # Filtrer les données en fonction de la sélection de l'utilisateur
ggplot(filtered_data, aes(x = key, y = value, color = X, group = X)) +
geom_line() +
scale_color_manual(values = filtered_data$Couleur) +
labs(x = "", y = "Nombre de voyageurs annuel (en millions)", title = "La fréquentation des lignes de métro (2015-2021)", color = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(0, 200)
})
}
# Lancer l'application Shiny
shinyApp(ui = ui, server = server)
ligne_14 <- trafic_metro %>%
filter(Correspondance_1 == "14" |
Correspondance_2 == "14" |
Correspondance_3 == "14" |
Correspondance_4 == "14" |
Correspondance_5 == "14")
resultats_top5 <- ligne_14 %>%
top_n(5, Trafic) %>%
arrange(desc(Trafic))
ggplot(resultats_top5, aes(x = reorder(Station, -Trafic), y = Trafic, label = Trafic)) +
theme_classic() +
geom_bar(stat = "identity", fill = "#662483", color = "black") +
geom_text(aes(label = scales::number(Trafic, big.mark = " ")), position = position_stack(vjust = 0.5), color = "black", size = 3) +
labs(x = "", y = "Nombre de validations annuel", title = "Les stations de la ligne 6 les plus fréquentées (2021)") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
resultats_bottom5 <- ligne_14 %>%
tail(5) %>%
arrange(Trafic)
ggplot(resultats_bottom5, aes(x = reorder(Station, Trafic), y = Trafic, label = Trafic)) +
theme_classic() +
geom_bar(stat = "identity", fill = "#662483", color = "black") +
geom_text(aes(label = scales::number(Trafic, big.mark = " ")), position = position_stack(vjust = 0.5), color = "black", size = 3) +
labs(x = "", y = "Nombre de validations annuel", title = "Les stations de la ligne 14 les moins fréquentées (2021)") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
ligne_5 <- trafic_metro %>%
filter(Correspondance_1 == "5" |
Correspondance_2 == "5" |
Correspondance_3 == "5" |
Correspondance_4 == "5" |
Correspondance_5 == "5")
resultats_top5 <- ligne_5 %>%
top_n(5, Trafic) %>%
arrange(desc(Trafic))
ggplot(resultats_top5, aes(x = reorder(Station, -Trafic), y = Trafic, label = Trafic)) +
theme_classic() +
geom_bar(stat = "identity", fill = "#F28E42", color = "black") +
geom_text(aes(label = scales::number(Trafic, big.mark = " ")), position = position_stack(vjust = 0.5), color = "black", size = 3) +
labs(x = "", y = "Nombre de validations annuel", title = "Les stations de la ligne 14 les plus fréquentées (2021)") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
resultats_bottom5 <- ligne_5 %>%
tail(5) %>%
arrange(Trafic)
ggplot(resultats_bottom5, aes(x = reorder(Station, Trafic), y = Trafic, label = Trafic)) +
theme_classic() +
geom_bar(stat = "identity", fill = "#F28E42", color = "black") +
geom_text(aes(label = scales::number(Trafic, big.mark = " ")), position = position_stack(vjust = 0.5), color = "black", size = 3) +
labs(x = "", y = "Nombre de validations annuel", title = "Les stations de la ligne 14 les moins fréquentées (2021)") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
ggplot(resultats_bottom5, aes(x = reorder(Station, Trafic), y = Trafic, label = Trafic)) +
theme_classic() +
geom_bar(stat = "identity", fill = "#F28E42", color = "black") +
geom_text(aes(label = scales::number(Trafic, big.mark = " ")), position = position_stack(vjust = 0.5), color = "black", size = 3) +
labs(x = "", y = "Nombre de validations annuel", title = "Les stations de la ligne 5 les moins fréquentées (2021)") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
ligne_9 <- trafic_metro %>%
filter(Correspondance_1 == "9" |
Correspondance_2 == "9" |
Correspondance_3 == "9" |
Correspondance_4 == "9" |
Correspondance_5 == "9")
resultats_top5 <- ligne_9 %>%
top_n(5, Trafic) %>%
arrange(desc(Trafic))
ggplot(resultats_top5, aes(x = reorder(Station, -Trafic), y = Trafic, label = Trafic)) +
theme_classic() +
geom_bar(stat = "identity", fill = "#D5C900", color = "black") +
geom_text(aes(label = scales::number(Trafic, big.mark = " ")), position = position_stack(vjust = 0.5), color = "black", size = 3) +
labs(x = "", y = "Nombre de validations annuel", title = "Les stations de la ligne 5 les plus fréquentées (2021)") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
resultats_bottom5 <- ligne_9 %>%
tail(5) %>%
arrange(Trafic)
ggplot(resultats_bottom5, aes(x = reorder(Station, Trafic), y = Trafic, label = Trafic)) +
theme_classic() +
geom_bar(stat = "identity", fill = "#D5C900", color = "black") +
geom_text(aes(label = scales::number(Trafic, big.mark = " ")), position = position_stack(vjust = 0.5), color = "black", size = 3) +
labs(x = "", y = "Nombre de validations annuel", title = "Les stations de la ligne 5 les moins fréquentées (2021)") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
ggplot(resultats_bottom5, aes(x = reorder(Station, Trafic), y = Trafic, label = Trafic)) +
theme_classic() +
geom_bar(stat = "identity", fill = "#D5C900", color = "black") +
geom_text(aes(label = scales::number(Trafic, big.mark = " ")), position = position_stack(vjust = 0.5), color = "black", size = 3) +
labs(x = "", y = "Nombre de validations annuel", title = "Les stations de la ligne 9 les moins fréquentées (2021)") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
